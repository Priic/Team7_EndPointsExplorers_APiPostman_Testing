{
	"info": {
		"_postman_id": "2dc3cfef-f4e1-4fb6-90d9-0d07ef85c459",
		"name": "Team7_EndPoints_Explorers_API_POSTMAN_Hackathon",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "UserLoginModule",
			"item": [
				{
					"name": "Invalid  Email Id Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15f6ea7e-f9a9-402b-b436-df2606f3dbf6",
								"exec": [
									"pm.test(\"Status code is 401 : Invalid Email Id\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "528051af-7bc8-4510-90ad-5bf264d0ba18",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{Invalidpassword}}\",\r\n  \"userLoginEmailId\": \"{{userLoginEmailId}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/login"
					},
					"response": []
				},
				{
					"name": "Invalid Password Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10edc0a2-c10f-4cb0-b43b-8f02d90e5905",
								"exec": [
									"pm.test(\"Status code is 401 : Invalid Password\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c71883ac-0f19-471f-8e60-0162b4cb2057",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{password}}\",\r\n  \"userLoginEmailId\": \"{{InvaliduserLoginEmailId}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/login"
					},
					"response": []
				},
				{
					"name": "Blank Email Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "995f6718-9c16-4153-8758-428da33c1c5a",
								"exec": [
									" pm.test(\"Status code is 400 :Bad request : Email is mandatory\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "90063d4c-abbe-487c-b2f7-f9d54818d193",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"\",\r\n  \"userLoginEmailId\": \"{{userLoginEmailId}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/login"
					},
					"response": []
				},
				{
					"name": "Blank password Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "18c4de37-d82a-4f9a-8ec6-5702cddb9da6",
								"exec": [
									" pm.test(\"Status code is 400 :Bad request : password is mandatory\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e7cbac21-fd6a-474f-b41f-b7a1a4f2c9e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{password}}\",\r\n  \"userLoginEmailId\": \"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/login"
					},
					"response": []
				},
				{
					"name": "Blank Email and Blank  password",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fdb9ad2b-f71e-4aed-a197-d91dfa90d378",
								"exec": [
									"    pm.test(\"Status code is 400 :Bad request : Email and password are mandatory\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bf5f9a33-c008-4686-a86b-2b274872e218",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"\",\r\n  \"userLoginEmailId\": \"\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/login"
					},
					"response": []
				},
				{
					"name": "User SignIn to LMS application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ab74918-e9eb-4882-892c-e6fc13fd98c6",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Active\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody)\r",
									"pm.collectionVariables.set(\"BearerToken\", jsonData.token);\r",
									"\r",
									"//set Response Schema variable \r",
									"var schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"email\": { \"type\": \"string\" },\r",
									"    \"roles\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": { \"type\": \"string\" }\r",
									"    },\r",
									"    \"status\": { \"type\": \"string\" },\r",
									"    \"token\": { \"type\": \"string\" },\r",
									"    \"type\": { \"type\": \"string\" },\r",
									"    \"userId\": { \"type\": \"string\" }\r",
									"  },\r",
									"  \"required\": [\"email\", \"roles\", \"status\", \"token\", \"type\", \"userId\"]\r",
									"};\r",
									"     \r",
									"    \r",
									"  \r",
									"pm.test('Schema validation', () => {\r",
									"  pm.response.to.have.jsonSchema (schema);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "599f9167-d300-48cc-a20b-593ac4074768",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n  \"password\": \"{{passwordExcel}}\",\r\n  \"userLoginEmailId\": \"{{userLoginEmailIdExcel}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/login"
					},
					"response": []
				}
			],
			"id": "c5c85c88-fd78-4961-98a4-c4d54fcc58f1"
		},
		{
			"name": "ProgramModule",
			"item": [
				{
					"name": "Create New Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b6f5444-b9ea-48af-ab54-e9ccf272e7ff",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"pm.collectionVariables.set(\"programName\",jsonData.programName);",
									"pm.collectionVariables.set(\"programDescription\", jsonData.programDescription);",
									"pm.collectionVariables.set(\"programStatus\", jsonData.programStatus);",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);",
									"pm.collectionVariables.set(\"creationTime\", jsonData.creationTime);",
									"pm.collectionVariables.set(\"lastModTime\", jsonData.lastModTime);",
									"",
									"",
									"var jsonResponse = pm.response.json();",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"programId\": { \"type\": \"integer\" },",
									"    \"programName\": { \"type\": \"string\" },",
									"    \"programDescription\": { \"type\": \"string\" },",
									"    \"programStatus\": { \"type\": \"string\" },",
									"    \"creationTime\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"    \"lastModTime\": { \"type\": \"string\", \"format\": \"date-time\" }",
									"  },",
									"  \"required\": [\"programId\", \"programName\", \"programDescription\", \"programStatus\", \"creationTime\", \"lastModTime\"]",
									"};",
									"",
									"pm.test('Schema validation', () => {",
									"  pm.response.to.have.jsonSchema (schema);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7c0f246b-1807-4004-a33c-b9941aeb07a1",
								"exec": [
									"const serialNumber = _.random(70,75)",
									"pm.variables.set(\"serialNumber\", serialNumber )"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3a94e566-3445-43dd-858f-8c2d114e1850",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programDescription\": \"{{programDescription_TestFile}}\",\n  \"programName\": \"{{createprogramName}}{{serialNumber}}\",\n  \"programStatus\": \"{{createprogramStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "Create New Program for existing program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b6f5444-b9ea-48af-ab54-e9ccf272e7ff",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7c0f246b-1807-4004-a33c-b9941aeb07a1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a99dba9d-f41c-47f7-8829-32ccfcab57b6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programDescription\": \"{{programDescription}}\",\n  \"programName\": \"{{programName}}\",\n  \"programStatus\": \"{{programStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "Create New Program with Invalid Program Description",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "55952057-7561-4db4-af23-51fbcfa64cf8",
								"exec": [
									"pm.test(\"Not a Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"    });",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3ecd45db-abd4-4e75-99dd-2a199025b6de",
								"exec": [
									"const serialNumber = _.random(0,5)",
									"pm.variables.set(\"serialNumber\", serialNumber )"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "94c1ecb9-42cf-454e-acf4-993d8ad65578",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programDescription\": \"{{programDescriptionNegative}}\",\n  \"programName\": \"{{programName}}{{serialNumber}}\",\n  \"programStatus\": \"{{programStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "Create Program with Invalid Program Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "887ab81b-e3f8-40ed-a156-67b571f8ca23",
								"exec": [
									"pm.test(\"Not a Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "300ba356-7dd1-4b71-9e2c-5168bf702837",
								"exec": [
									"const serialNumber = _.random(0,5)",
									"pm.variables.set(\"serialNumber\", serialNumber )"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b5c46d77-c6f8-441a-89bd-be3d2b1531ce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programDescription\": \"{{programDescription}}\",\n  \"programName\": \"{{programNameNegative}}\",\n  \"programStatus\": \"{{programStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "Create Proagram with Invalid Program Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "907f6629-a3f1-4bfa-bfaf-e23ed77e1dfa",
								"exec": [
									"pm.test(\"Not a Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400]);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "674c0063-185f-4b79-8716-e7494a815632",
								"exec": [
									"const serialNumber = _.random(0,5)",
									"pm.variables.set(\"serialNumber\", serialNumber )"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "28bd33da-523a-4090-854f-f8cf6125c93f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programDescription\": \"{{programDescription}}\",\n  \"programName\": \"{{programName}}{{serialNumber}}\",\n  \"programStatus\": \"{{programStatusNegative}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "All Programs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68224db6-0868-41cb-b4d2-ecd53aade614",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7cfc0124-2827-4ed0-b150-8a6e93f700d0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/allPrograms"
					},
					"response": []
				},
				{
					"name": "Program By ProgramID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b878373-4aef-4041-9718-aab60103f251",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e91832df-8c6b-44d9-8a9c-47a910e076c8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/programs/{{programId}}"
					},
					"response": []
				},
				{
					"name": "Program By non-exsting ProgramID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b878373-4aef-4041-9718-aab60103f251",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e82fca90-03c5-4376-980b-33f6618faab8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/programs/{{NonExistProgramId}}"
					},
					"response": []
				},
				{
					"name": "All Program with Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "246424eb-c039-403d-80bc-dd07d357e141",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "70cc3ca9-b80b-421a-b787-3ecd1a740edb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/allProgramsWithUsers"
					},
					"response": []
				},
				{
					"name": "Update Program By Program ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3194ff86-a6ac-4879-91c1-5eae13d246ac",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"   \r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									" //pm.environment.set(\"programId\", jsonData.programId);\r",
									" pm.collectionVariables.set(\"programName\",jsonData.programName);\r",
									"pm.collectionVariables.set(\"programDescription\", jsonData.programDescription);\r",
									"pm.collectionVariables.set(\"programStatus\", jsonData.programStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"pm.collectionVariables.set(\"creationTime\", jsonData.creationTime);\r",
									"pm.collectionVariables.set(\"lastModTime\", jsonData.lastModTime);\r",
									"\r",
									"\r",
									"\r",
									"var schema = {\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"programId\": { \"type\": \"integer\" },\r",
									"    \"programName\": { \"type\": \"string\" },\r",
									"    \"programDescription\": { \"type\": \"string\" },\r",
									"    \"programStatus\": { \"type\": \"string\" },\r",
									"    \"creationTime\": { \"type\": \"string\", \"format\": \"date-time\" },\r",
									"    \"lastModTime\": { \"type\": \"string\", \"format\": \"date-time\" }\r",
									"  },\r",
									"  \"required\": [\"programId\", \"programName\", \"programDescription\", \"programStatus\", \"creationTime\", \"lastModTime\"]\r",
									"};\r",
									"\r",
									"pm.test('Schema validation', () => {\r",
									"  pm.response.to.have.jsonSchema (schema);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d7824397-0cf3-4094-b0f0-25915e139f41",
								"exec": [
									"// const serialNumber = _.random(400,1000)\r",
									"// pm.variables.set(\"serialNumber\", serialNumber )"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e0ec71e5-3d88-4297-8256-5035deb7b5a8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n\"programDescription\": \"{{IDprogramDescription}}\",\r\n\"programName\": \"{{programName}}\",\r\n\"programStatus\": \"{{programStatus}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/putprogram/{{programId}}"
					},
					"response": []
				},
				{
					"name": "Update Program By ID with Empty Program Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d962eef-6928-49f3-8bf3-cf903935e771",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"   \r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3efa700a-34e8-4594-88e5-357ed00cfdbb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n\"programDescription\": \"{{IDprogramDescription}}\",\r\n\"programName\": \"{{IDEmptyprogramName}}\",\r\n\"programStatus\": \"{{programStatus}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/putprogram/{{programId}}"
					},
					"response": []
				},
				{
					"name": "Update Program By ID  for non-existing program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d962eef-6928-49f3-8bf3-cf903935e771",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									" \r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "39cf6bdd-fd5c-49eb-9c92-3cedeb041991",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n\"programDescription\": \"{{IDprogramDescription}}\",\r\n\"programName\": \"{{programName}}\",\r\n\"programStatus\": \"{{programStatus}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/putprogram/{{NonExistProgramId}}"
					},
					"response": []
				},
				{
					"name": "Update Program By ID With Empty Program Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fac30e71-8340-42f5-8b28-ef4aabf8f9d8",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"   \r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "16466f68-433d-4933-a67c-a7a976ba5222",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n\"programDescription\": \"{{IDprogramDescription}}\",\r\n\"programName\": \"{{programName}}\",\r\n\"programStatus\": \"{{IDEmptyprogramStatus}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/putprogram/{{programId}}"
					},
					"response": []
				},
				{
					"name": "Update Program description By Program Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fac2e161-711d-4194-82ee-e01572b5f692",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"   \r",
									"\r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);\r",
									" \r",
									"pm.collectionVariables.set(\"programName\",jsonData.programName);\r",
									"pm.collectionVariables.set(\"programDescription\", jsonData.programDescription);\r",
									"pm.collectionVariables.set(\"programStatus\", jsonData.programStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"pm.collectionVariables.set(\"creationTime\", jsonData.creationTime);\r",
									"pm.collectionVariables.set(\"lastModTime\", jsonData.lastModTime);\r",
									"\r",
									"//pm.test(\"verify program name \",function()\r",
									"//{\r",
									"// const response=pm.response.json();\r",
									"// pm.expect(response.json.programName).to.eql(pm.iterationData.get(\"programName\"));\r",
									"\r",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "07c43cc0-812d-4dcc-a69c-50e95d21ec06",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\": \"{{NameprogramDescription}}\",\r\n\"programName\": \"{{programName}}\",\r\n\"programStatus\": \"{{programStatus}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/program/{{programName}}"
					},
					"response": []
				},
				{
					"name": "Update Program By Name  for non-existing program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6d962eef-6928-49f3-8bf3-cf903935e771",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									" \r",
									"});\r",
									"var jsonData = JSON.parse(responseBody);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8e931c1b-8e08-4553-b332-d00021007f16",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n\"programDescription\": \"{{NameprogramDescription}}\",\r\n\"programName\": \"{{NonExistProgramName}}\",\r\n\"programStatus\": \"{{programStatus}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/putprogram/{{NonExistProgramName}}"
					},
					"response": []
				},
				{
					"name": "Update Program By Name with Empty Program Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "667fb60b-abde-41b5-a4c5-26917bd1e01e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"   \r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "798fa26f-b964-499a-8b09-d946a57cafb9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"programDescription\": \"{{programDescription}}\",\r\n\"programName\": \"{{IDEmptyprogramName}}\",\r\n\"programStatus\": \"{{programStatus}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/program/{{programName}}"
					},
					"response": []
				},
				{
					"name": "Update Program By Name With Empty Pogram Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0eb53dd8-916f-4cd8-9343-b98c0d939275",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"   \r",
									"\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1e15b4d1-bcc5-4c92-92ed-4bfe19bcd3bd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n{\r\n\"programDescription\": \"{{programDescription}}\",\r\n\"programName\": \"{{programName}}\",\r\n\"programStatus\": \"{{IDEmptyprogramStatus}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/program/{{programName}}"
					},
					"response": []
				},
				{
					"name": "Delete Program With Program ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49d737a3-cc05-4a40-b9be-5ce01ca8c5fa",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"   \r",
									"   \r",
									"\r",
									"});\r",
									"const response=pm.response.text();    \r",
									"pm.test(\"Program deleted successfully\",()=>{\r",
									"    pm.expect(response).to.eql(\"Message: Program Id-\"+pm.collectionVariables.get(\"programId\")+\" is deleted Successfully!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b1f2a39a-5f8e-464f-bc78-64e180dd9152",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/deletebyprogid/{{programId}}"
					},
					"response": []
				},
				{
					"name": "Delete Program With inactive Program Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c86255a-4b65-486e-9bb1-ffc2260944e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"   \r",
									"\r",
									"});\r",
									"const response=pm.response.text();    \r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0e80f495-24b5-4b5f-b920-29ab725d7d0d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/deletebyprogid/{{programId}}"
					},
					"response": []
				},
				{
					"name": "Create New Second Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b6f5444-b9ea-48af-ab54-e9ccf272e7ff",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"programName\",jsonData.programName);",
									"pm.collectionVariables.set(\"programDescription\", jsonData.programDescription);",
									"pm.collectionVariables.set(\"programStatus\", jsonData.programStatus);",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);",
									"pm.collectionVariables.set(\"creationTime\", jsonData.creationTime);",
									"pm.collectionVariables.set(\"lastModTime\", jsonData.lastModTime);",
									"pm.collectionVariables.set(\"InActiveProgramId\", jsonData.programId);",
									"",
									"var jsonResponse = pm.response.json();",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"programId\": { \"type\": \"integer\" },",
									"    \"programName\": { \"type\": \"string\" },",
									"    \"programDescription\": { \"type\": \"string\" },",
									"    \"programStatus\": { \"type\": \"string\" },",
									"    \"creationTime\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"    \"lastModTime\": { \"type\": \"string\", \"format\": \"date-time\" }",
									"  },",
									"  \"required\": [\"programId\", \"programName\", \"programDescription\", \"programStatus\", \"creationTime\", \"lastModTime\"]",
									"};",
									"",
									"pm.test('Schema validation', () => {",
									"  pm.response.to.have.jsonSchema (schema);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7c0f246b-1807-4004-a33c-b9941aeb07a1",
								"exec": [
									"const serialNumber = _.random(80,70)",
									"pm.variables.set(\"serialNumber\", serialNumber )"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "959f29e3-e50d-4cd3-93dd-adca19b5fe3e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programDescription\": \"{{programDescription_TestFile}}\",\n  \"programName\": \"{{createprogramName}}{{serialNumber}}\",\n  \"programStatus\": \"{{createprogramStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "Delete Program With  Program Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c86255a-4b65-486e-9bb1-ffc2260944e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"   \r",
									"\r",
									"});\r",
									"const response=pm.response.text();    \r",
									"pm.test(\"Program deleted successfully\",()=>{\r",
									"    pm.expect(response).to.eql(\"Message: Program Name -\"+pm.collectionVariables.get(\"programName\")+\" is deleted Successfully!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9fd0779e-3648-4383-a3cd-7951c7cb60cc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/deletebyprogname/{{programName}}"
					},
					"response": []
				},
				{
					"name": "Create New Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9b6f5444-b9ea-48af-ab54-e9ccf272e7ff",
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"pm.collectionVariables.set(\"programName\",jsonData.programName);",
									"pm.collectionVariables.set(\"programDescription\", jsonData.programDescription);",
									"pm.collectionVariables.set(\"programStatus\", jsonData.programStatus);",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);",
									"pm.collectionVariables.set(\"creationTime\", jsonData.creationTime);",
									"pm.collectionVariables.set(\"lastModTime\", jsonData.lastModTime);",
									"",
									"var jsonResponse = pm.response.json();",
									"var schema = {",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"programId\": { \"type\": \"integer\" },",
									"    \"programName\": { \"type\": \"string\" },",
									"    \"programDescription\": { \"type\": \"string\" },",
									"    \"programStatus\": { \"type\": \"string\" },",
									"    \"creationTime\": { \"type\": \"string\", \"format\": \"date-time\" },",
									"    \"lastModTime\": { \"type\": \"string\", \"format\": \"date-time\" }",
									"  },",
									"  \"required\": [\"programId\", \"programName\", \"programDescription\", \"programStatus\", \"creationTime\", \"lastModTime\"]",
									"};",
									"",
									"pm.test('Schema validation', () => {",
									"  pm.response.to.have.jsonSchema (schema);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "7c0f246b-1807-4004-a33c-b9941aeb07a1",
								"exec": [
									"const serialNumber = _.random(90,95)",
									"pm.variables.set(\"serialNumber\", serialNumber )"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c4925d08-c245-4412-914a-ab5cce87e14c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programDescription\": \"{{programDescription_TestFile}}\",\n  \"programName\": \"{{createprogramName}}{{serialNumber}}\",\n  \"programStatus\": \"{{createprogramStatus}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/saveprogram"
					},
					"response": []
				},
				{
					"name": "Program By ProgramID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b878373-4aef-4041-9718-aab60103f251",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e93a65b7-71a4-4fb3-b6a0-df61b12f787d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/programs/{{programId}}"
					},
					"response": []
				}
			],
			"id": "9b6bb715-7d29-4cbf-8f6e-cd70d1d0bffc"
		},
		{
			"name": "ProgramBatchModule",
			"item": [
				{
					"name": "Create a new Batch for the Program",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									"const serialNumber = _.random(20,25)\r",
									"pm.variables.set(\"serialNumber\", serialNumber )"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"      pm.response.to.have.status(201);\r",
									"});\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									" \r",
									"const jsonData=JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"batchName\", jsonData.batchName)\r",
									" pm.collectionVariables.set(\"batchDescription\", jsonData.batchDescription);\r",
									" pm.collectionVariables.set(\"batchNoOfClasses\", jsonData.batchNoOfClasses);\r",
									" pm.collectionVariables.set(\"batchStatus\", jsonData.batchStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"pm.collectionVariables.set(\"batchId\", jsonData.batchId);\r",
									"pm.collectionVariables.set(\"InactiveBatchId\", jsonData.batchId);\r",
									"pm.collectionVariables.set(\"InActiveBatchName\", jsonData.batchName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a08534c6-3e9a-400b-917f-4e308d8b5e8d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescriptionExcel}}\",\r\n  \"batchName\": \"{{batchNameExcel}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClassesExcel}},\r\n  \"batchStatus\": \"{{batchStatusExcel}}\",\r\n  \"programId\": {{programId}}\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				},
				{
					"name": "Create a new Batch with existing Program and  batchName-Invalid 400 status code",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									"//const serialNumber = _.random(0,5)\r",
									"//pm.variables.set(\"serialNumber\", serialNumber )"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {\r",
									"     pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"   \r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"// pm.collectionVariables.set(\"batchName\", jsonData.batchName)\r",
									"//  pm.collectionVariables.set(\"batchName\", jsonData.batchName);\r",
									"//  pm.collectionVariables.set(\"batchNoOfClasses\", jsonData.batchNoOfClasses);\r",
									"//  pm.collectionVariables.set(\"batchStatus\", jsonData.batchStatus);\r",
									"// pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"// pm.collectionVariables.set(\"batchId\", jsonData.batchId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "199f26d8-46d2-4e5b-8713-2932d7347015",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}}\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				},
				{
					"name": "Create a new Batch for the Program with missing BatchName-Invalid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"    \r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c4b886e7-09df-4767-bc54-2646f417cd7a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}}\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				},
				{
					"name": "Create a new Batch for the Program with missing Batch Number Of Classes-invalid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8e6ca8f1-4dd1-4d3f-8a3b-a31628fecc9d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{missingbatchNumber}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}}\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				},
				{
					"name": "Create a new Batch for the Program with  Batch Number Of Classes  as alphanumeric-invalid Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4427cc96-6157-4710-986d-ede36dc3b3a2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": \"10q\",\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}}\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				},
				{
					"name": "Create a new Batch for the Program with missing BatchStatus code-invalid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2548ca9f-ca93-4255-9070-785d3d52e0fa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"\",\r\n  \"programId\": {{programId}}\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				},
				{
					"name": "Create a new Batch for the Program with missing ProgramId-Invalid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "120816da-eced-4bcf-8871-d92ceecfb799",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": \"\"\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				},
				{
					"name": "Create a new Batch for the Program with invalid EndPoint-Invalid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ed9a3d18-ba30-4f38-b02d-8362aadc0b71",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}}\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batchesand"
					},
					"response": []
				},
				{
					"name": "Create a new Batch for the Program with Inactive ProgramID-Invalid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "84665ace-4ed4-47f8-a493-9f5756959827",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{InActiveProgramId}}\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				},
				{
					"name": "View All Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "237bff18-7823-499f-a89e-d3127a5c5897",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d93a562b-9b1e-44bd-8306-c809adce7ab5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				},
				{
					"name": "View Batch by valid BatchID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f2b7dd9d-5496-41c2-87bc-c193507ac795",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/batchId/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "View Batch by valid  BatchName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0d1e1752-3813-4989-a2d0-1d30a53d5c4e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/batchName/{{batchName}}"
					},
					"response": []
				},
				{
					"name": "View Batch by valid  ProgramID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6adb8069-ba00-4550-9d54-e70196c2f5f9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/program/{{programId}}"
					},
					"response": []
				},
				{
					"name": "View Batch by Inactive  Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7380eff3-deff-47dc-8f80-3f7229d2f0e3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/program/{{InActiveProgramId}}"
					},
					"response": []
				},
				{
					"name": "View Batch by non-existing BatchID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3ea8a791-2eb6-4519-80cd-07bbceaae5a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/batchId/{{nonExistngBatchId}}"
					},
					"response": []
				},
				{
					"name": "View Batch by non-existing BatchName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9cd22d9b-3aa6-4930-bce3-9996fa553587",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/batchName/{{NonExistngBatchName}}"
					},
					"response": []
				},
				{
					"name": "View Batch by non-existing ProgramID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2c709a3d-c277-45ba-9bf5-bf45af8590a4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/program/{{NonExistProgramId}}"
					},
					"response": []
				},
				{
					"name": "Update a Batch with Batch descriptions by valid BATCH ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"batchName\", jsonData.batchName)\r",
									"pm.collectionVariables.set(\"batchDescription\", jsonData.batchDescription);\r",
									"pm.collectionVariables.set(\"batchNoOfClasses\", jsonData.batchNoOfClasses);\r",
									"pm.collectionVariables.set(\"batchStatus\", jsonData.batchStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"pm.collectionVariables.set(\"programName\", jsonData.programName);\r",
									"pm.collectionVariables.set(\"batchId\", jsonData.batchId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9eea0312-82e8-4ebf-9a5f-990fa714f4d6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{UpdatebatchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update a Batch with Batch Number Of classes  by valid BATCH ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"batchName\", jsonData.batchName)\r",
									"pm.collectionVariables.set(\"batchDescription\", jsonData.batchDescription);\r",
									"pm.collectionVariables.set(\"batchNoOfClasses\", jsonData.batchNoOfClasses);\r",
									"pm.collectionVariables.set(\"batchStatus\", jsonData.batchStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"pm.collectionVariables.set(\"programName\", jsonData.programName);\r",
									"pm.collectionVariables.set(\"batchId\", jsonData.batchId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4a604b1c-16c4-4c3c-a8c9-a8c0ab2e5eeb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{UpdatebatchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update a Batch with Batch Name by valid Batch ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"batchName\", jsonData.batchName)\r",
									"pm.collectionVariables.set(\"batchDescription\", jsonData.batchDescription);\r",
									"pm.collectionVariables.set(\"batchNoOfClasses\", jsonData.batchNoOfClasses);\r",
									"pm.collectionVariables.set(\"batchStatus\", jsonData.batchStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"pm.collectionVariables.set(\"programName\", jsonData.programName);\r",
									"pm.collectionVariables.set(\"batchId\", jsonData.batchId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "46126b62-3296-46d5-9819-867f2a7bfc24",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{UpdatebatchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update a Batch with Program name  by BATCH ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"batchName\", jsonData.batchName)\r",
									"pm.collectionVariables.set(\"batchDescription\", jsonData.batchDescription);\r",
									"pm.collectionVariables.set(\"batchNoOfClasses\", jsonData.batchNoOfClasses);\r",
									"pm.collectionVariables.set(\"batchStatus\", jsonData.batchStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"//assumption :corresponding program name associated with the programId will be displayed, and will not take any other value.\r",
									"pm.collectionVariables.set(\"programName\", jsonData.programName);\r",
									"pm.collectionVariables.set(\"batchId\", jsonData.batchId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3693546f-be9c-432f-b516-5a0af6862fff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{UpdateprogramName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update a Batch with existing ProgramID by valid BATCH ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "62cc7119-5ed5-4d95-827a-bc6fad948fa9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update the batch by BatchId  with Inactive ProgramId-Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ed8d51f1-ffa0-4639-93c3-de51dc548556",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{InActiveProgramId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update Batch Status with invalid status value by batchId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f95dcaad-319f-4fd6-b619-1f78e98aaa59",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{InvalidBatchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update Batch Status  by batchId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"batchName\", jsonData.batchName)\r",
									"pm.collectionVariables.set(\"batchDescription\", jsonData.batchDescription);\r",
									"pm.collectionVariables.set(\"batchNoOfClasses\", jsonData.batchNoOfClasses);\r",
									"pm.collectionVariables.set(\"batchStatus\", jsonData.batchStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"pm.collectionVariables.set(\"programName\", jsonData.programName);\r",
									"pm.collectionVariables.set(\"batchId\", jsonData.batchId);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "22c51a08-c4ff-41a4-a160-f6be22fa7b24",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{UpdatebatchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update Batch status and program name with valid batchId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"batchName\", jsonData.batchName)\r",
									"pm.collectionVariables.set(\"batchDescription\", jsonData.batchDescription);\r",
									"pm.collectionVariables.set(\"batchNoOfClasses\", jsonData.batchNoOfClasses);\r",
									"pm.collectionVariables.set(\"batchStatus\", jsonData.batchStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"pm.collectionVariables.set(\"programName\", jsonData.programName);\r",
									"pm.collectionVariables.set(\"batchId\", jsonData.batchId);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8c229e0a-3400-4c6e-ac28-3401ae59625b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{ActivebatchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{UpdateprogramName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update batch with non-existing ProgramId -Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b47c76c5-bc4e-4d82-90d4-158690cb0604",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{NonExistProgramId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update BatchId of a batch with the  existing BatchId-Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5ca7e28d-ac50-4ab2-abe0-edf6b3f419dd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{batchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Update Batch description by non existing batchId-invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f51a9f3b-44e5-4afe-a39e-83567cb28697",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{nonExistngBatchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{nonExistngBatchId}}"
					},
					"response": []
				},
				{
					"name": "Update Batch number of classes  by non existing batchId-invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7edd4789-cadb-432d-9b66-34910b5e61d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{nonExistngBatchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{nonExistngBatchId}}"
					},
					"response": []
				},
				{
					"name": "Delete  a Batch with valid BATCH ID Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "baf894c6-205b-4f95-be0c-8752eb6d6f88",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8bc1c644-74e7-45f7-a389-53659988c9b2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Delete Batch by non-existing BatchID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "baf894c6-205b-4f95-be0c-8752eb6d6f88",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1ed71526-3976-4842-b66b-6addfdc684d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/batches/{{nonExistngBatchId}}"
					},
					"response": []
				},
				{
					"name": "Delete Batch by inactive BatchID -invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "baf894c6-205b-4f95-be0c-8752eb6d6f88",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f1f994a3-08c5-4c6c-99a5-c97babae9c53",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/batches/{{InactiveBatchId}}"
					},
					"response": []
				},
				{
					"name": "View Batch by Inactive BatchID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a9b236d1-8cab-4a6e-baf8-411b18a2a37c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/batchId/{{InactiveBatchId}}"
					},
					"response": []
				},
				{
					"name": "View Batch by Inactive BatchName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6f7c5f0f-e9a9-4d81-af3c-d2f25249d513",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/batchName/{{InActiveBatchName}}"
					},
					"response": []
				},
				{
					"name": "Update Batch descriptions  by inactive batchId -invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c2bb806d-2d69-453e-9db2-3f4f5b40b289",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{InactiveBatchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{InactiveBatchId}}"
					},
					"response": []
				},
				{
					"name": "Update Batch number of classes  by inactive batchId-invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81c8ab57-f4fb-487a-b675-e7e50f1f607e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c6a13239-d547-46c6-9a97-9e3d090e5707",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescription}}\",\r\n  \"batchId\": {{InactiveBatchId}},\r\n  \"batchName\": \"{{batchName}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClasses}},\r\n  \"batchStatus\": \"{{batchStatus}}\",\r\n  \"programId\": {{programId}},\r\n  \"programName\": \"{{programName}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches/{{InactiveBatchId}}"
					},
					"response": []
				},
				{
					"name": "Delete  a existing Batch to make  Batch status inactive",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "baf894c6-205b-4f95-be0c-8752eb6d6f88",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8fe5938d-08fb-4e45-9197-b75ad1e421a0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/batches/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "Create a new Batch 2 for the given Program",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc6a8ab0-0558-4b34-9de9-48ffa869543e",
								"exec": [
									"const serialNumber = _.random(30,35)\r",
									"pm.variables.set(\"serialNumber\", serialNumber )\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f7ca5984-998d-4e0f-85cf-202bfb89c507",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"      pm.response.to.have.status(201);\r",
									"});\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"const jsonData=JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"batchName\", jsonData.batchName)\r",
									" pm.collectionVariables.set(\"batchDescription\", jsonData.batchDescription);\r",
									" pm.collectionVariables.set(\"batchNoOfClasses\", jsonData.batchNoOfClasses);\r",
									" pm.collectionVariables.set(\"batchStatus\", jsonData.batchStatus);\r",
									"pm.collectionVariables.set(\"programId\", jsonData.programId);\r",
									"pm.collectionVariables.set(\"batchId\", jsonData.batchId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1444eb7e-512d-4f0e-a20c-17a6fb994391",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"batchDescription\": \"{{batchDescriptionExcel}}\",\r\n  \"batchName\": \"{{batchNameExcel}}\",\r\n  \"batchNoOfClasses\": {{batchNoOfClassesExcel}},\r\n  \"batchStatus\": \"{{batchStatusExcel}}\",\r\n  \"programId\": {{programId}}\r\n }\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/batches"
					},
					"response": []
				}
			],
			"id": "b307cf09-51e5-4d84-8b31-e145cd00aa02"
		},
		{
			"name": "UserModule",
			"item": [
				{
					"name": "NoAuthCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"id": "83695ef2-882a-4d4c-a8ce-f85ce99e6fe8"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "271ba7da-f6b4-4881-b009-4e58e08d97b6"
							}
						}
					],
					"id": "fbce915c-d5a4-4b48-8a25-ab0b910d5b9a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n    \"userComments\": \"{{AdminComments}}\",\n    \"userEduPg\": \"{{userEduPg}}\",\n    \"userEduUg\": \"{{userEduUg}}\",\n    \"userFirstName\": \"{{adminfirstname}}\",\n    \"userId\": \"\",\n    \"userLastName\": \"{{userLastName}}\",\n    \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n    \"userLocation\": \"{{userLocation}}\",\n    \"userLogin\": {\n        \"loginStatus\": \"{{loginStatus}}\",\n        \"password\": \"{{password}}\",\n        \"roleIds\": [\n        \"Admin\"\n        ],\n        \"status\": \"{{status}}\",\n        \"userLoginEmail\": \"{{email}}\"\n    },\n    \"userMiddleName\": \"{{userMiddleName}}\",\n    \"userPhoneNumber\": {{PhoneNumber}},\n    \"userRoleMaps\": [\n        {\n        \"roleId\": \"{{roleIdAdmin}}\",\n        \"userRoleStatus\": \"{{userStatus}}\"\n        }\n    ],\n    \"userTimeZone\": \"{{timeZone}}\",\n    \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n    }\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyRequestBodyCreatingUserforAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);"
								],
								"type": "text/javascript",
								"id": "b31e552b-1f7b-42c8-bab0-70bcc70540f1"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "9c85d307-bb82-4431-9545-02eb345c733c"
							}
						}
					],
					"id": "0d937a18-3631-4a66-a28b-0ee785ce346e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyFirstnameCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1353ee4f-3eca-42c6-a8fa-8eee60f308c0",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4508b3ce-b315-467e-b9aa-10751f39981b",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"pm.environment.unset(email)",
									" var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"    pm.collectionVariables.set(\"email\", email);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c5ef157d-2b76-4a53-992d-34609a424ddf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyLastnameCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1353ee4f-3eca-42c6-a8fa-8eee60f308c0",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4508b3ce-b315-467e-b9aa-10751f39981b",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"pm.environment.unset(email)",
									" var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"    pm.collectionVariables.set(\"email\", email);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b3eecd50-0912-4ac6-9990-f89c51bea2e5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyPhoneNumberCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1353ee4f-3eca-42c6-a8fa-8eee60f308c0",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"required\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4508b3ce-b315-467e-b9aa-10751f39981b",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"pm.environment.unset(email)",
									" var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"    pm.collectionVariables.set(\"email\", email);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "697d8adb-68bb-4fdb-b1e9-1387ca2fcfdf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": \"\",\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyMailCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "609c1dde-1062-4ea3-8a60-30e89f9bed56",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Mandatory\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ce28ef8d-27d3-461b-b656-28e89bd09b59",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4bc5790c-b4be-45e4-aacf-d4fbab1347c4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyRoleIdCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1353ee4f-3eca-42c6-a8fa-8eee60f308c0",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"mandatory\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4508b3ce-b315-467e-b9aa-10751f39981b",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"pm.environment.unset(email)",
									" var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"    pm.collectionVariables.set(\"email\", email);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "078e81d6-5e58-499d-a223-d7b2eed5c547",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyTimeZoneCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1353ee4f-3eca-42c6-a8fa-8eee60f308c0",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4508b3ce-b315-467e-b9aa-10751f39981b",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"pm.environment.unset(email)",
									" var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"    pm.collectionVariables.set(\"email\", email);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "da6b504b-08a8-4763-b1c3-b2062bc9e8c8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyVisaStatusCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1353ee4f-3eca-42c6-a8fa-8eee60f308c0",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4508b3ce-b315-467e-b9aa-10751f39981b",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"pm.environment.unset(email)",
									" var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"    pm.collectionVariables.set(\"email\", email);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b2faef5c-4b6c-45ba-be8e-5a5bb54750a0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidFirstnameCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"alphabets only\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "9f6e86f0-cb15-407b-ad8b-037d30bc58ae"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "7959ee1e-c450-4b83-b915-03ab93aade14"
							}
						}
					],
					"id": "513dc502-dd48-400a-b9f2-8c2c7456dd7c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{InvalidFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidLinkedInCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"www.linkedin.com\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "4054efcf-6dc5-4842-8614-808a14f72828"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);"
								],
								"type": "text/javascript",
								"id": "4238fd0b-1ab6-4aa2-8159-96b4711dc3d0"
							}
						}
					],
					"id": "a414f13e-7c2d-4770-a65f-ec7f6482ada8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{InvaliduserLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidPhoneNumberCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"format (CountryCode)(PhoneNo)\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "d962d0ee-4f4b-4fc4-9f2b-9fb21e165c4a"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);"
								],
								"type": "text/javascript",
								"id": "e309ce9e-5fb5-472f-99cf-c5c20be0aec9"
							}
						}
					],
					"id": "6c29d682-5c04-4eed-8275-d3c95593bc70",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{InvalidPhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidMailCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "609c1dde-1062-4ea3-8a60-30e89f9bed56",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ce28ef8d-27d3-461b-b656-28e89bd09b59",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var Invalidemail = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\");",
									"pm.collectionVariables.set(\"Invalidemail\", Invalidemail);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bdf326cc-cc0f-4c3a-9d7c-09e84df7b47a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{Invalidemail}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidVisaStatusCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"invalid\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "f8383832-18e0-4581-8eff-7f528835c7bb"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);"
								],
								"type": "text/javascript",
								"id": "38134d73-91ed-4d4d-89ed-0b74fc327c6d"
							}
						}
					],
					"id": "77930e24-16bd-4c2e-95b3-ff6c19cb15f2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{InvalidVisa}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidRoleIdCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"invalid\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "a3c13a30-7ad2-402f-adc0-7548edb9a947"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									""
								],
								"type": "text/javascript",
								"id": "0fcb3494-1503-4874-a68b-5fa1547ad646"
							}
						}
					],
					"id": "98f0d938-b588-4546-a984-37b1ee0be5d7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{invalidroleId}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "CreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1353ee4f-3eca-42c6-a8fa-8eee60f308c0",
								"exec": [
									"var user=JSON.parse(responseBody)",
									"pm.collectionVariables.set(\"adminuserId\", user.userId);",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4508b3ce-b315-467e-b9aa-10751f39981b",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"pm.environment.unset(email)",
									" var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"    pm.collectionVariables.set(\"email\", email);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7e75fc95-13da-4236-b07d-a50ff02d6f5c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidExistingPhoneNumberCreatingUserForAdminRole Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"already exists\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "f209f685-f052-4fbb-986d-fa146380c3da"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"// var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}+1\")+\"@gmail.com\";",
									"//     pm.collectionVariables.set(\"email\", email);"
								],
								"type": "text/javascript",
								"id": "f67b2b01-61c8-489d-8363-4e89d57e47a3"
							}
						}
					],
					"id": "d4e643f7-751b-4b97-912a-b56f650fddf0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidExistingMailCreatingUserForAdminRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "808f2bff-c4f8-4e5e-9407-51b5f861735b",
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"already exists\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cc3d09df-1b8b-4a49-9b80-20d8cf635d96",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3fd651f3-caee-41af-8ad4-5e69122ab598",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "CreatingUserForAdminRoleForInvalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39beb0a2-cb00-4be2-ab84-9ec88f3ba3a9",
								"exec": [
									"var user=JSON.parse(responseBody)",
									"pm.collectionVariables.set(\"userIdforInvalid\", user.userId);",
									"",
									"pm.test(\"Status code is 201 Created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cd72666c-7305-42c1-b6c4-6b7c8ce4a0bd",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"pm.collectionVariables.set(\"existingphone\",PhoneNumber);",
									"",
									" var email = \"admin1\" + pm.variables.replaceIn(\"{{$timestamp}}+1\")+\"@gmail.com\";",
									"    pm.collectionVariables.set(\"email\", email);",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "445c88d5-b7c7-4ee9-a4f0-96d93b7fd5c4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{adminfirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Admin\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\":\"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdAdmin}}\",\n      \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusAdmin}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "NoAuthCreatingUserForStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);"
								],
								"type": "text/javascript",
								"id": "7e00d9f0-ab94-4e5e-ae32-b2b5839805ec"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "d61c00f7-5e4e-4935-84e1-1ad0f2c742b8"
							}
						}
					],
					"id": "f768c7d8-8111-473c-92cb-ef6623e761e8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyRequestBodyCreatingUserforStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "639a16d4-04f9-4f9a-8ba3-c8f2726063fe"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "8a775842-fdb2-4adb-a390-5d941deb6fc4"
							}
						}
					],
					"id": "dcda0c74-de30-47a9-8cc1-dc674b4bb8b7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyFirstnameCreatingUserForStaffRole",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2faab7df-1488-4b87-bf86-e3e7c3731e68",
								"exec": [
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "efb8701e-2cb3-4b5f-89bd-b3066d64c811",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b5e4aaba-e3d8-433b-a7fd-0b6e491b4075",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyLastnameCreatingUserForStaffRole",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2faab7df-1488-4b87-bf86-e3e7c3731e68",
								"exec": [
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "efb8701e-2cb3-4b5f-89bd-b3066d64c811",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e1e7bd72-2936-4088-9a88-03d7fda4a7ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyPhoneNumberCreatingUserForStaffRole",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2faab7df-1488-4b87-bf86-e3e7c3731e68",
								"exec": [
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "efb8701e-2cb3-4b5f-89bd-b3066d64c811",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"required\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3e457362-143a-4ffb-a7eb-c1742b774f55",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": \"\",\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyEmailCreatingUserForStaffRole",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2faab7df-1488-4b87-bf86-e3e7c3731e68",
								"exec": [
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "efb8701e-2cb3-4b5f-89bd-b3066d64c811",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Mandatory\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "be0e55e1-2dee-4417-bf0d-0de5597e54fc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyRoleIdCreatingUserForStaffRole",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2faab7df-1488-4b87-bf86-e3e7c3731e68",
								"exec": [
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "efb8701e-2cb3-4b5f-89bd-b3066d64c811",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"mandatory\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bea5cb98-694e-4665-8445-a93708b23820",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyTimezoneCreatingUserForStaffRole",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2faab7df-1488-4b87-bf86-e3e7c3731e68",
								"exec": [
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "efb8701e-2cb3-4b5f-89bd-b3066d64c811",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "919ef87e-4ce0-46d0-a39c-a4c806e6575c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyVisaStatusCreatingUserForStaffRole",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2faab7df-1488-4b87-bf86-e3e7c3731e68",
								"exec": [
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "efb8701e-2cb3-4b5f-89bd-b3066d64c811",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4b4e06f9-5f76-4a53-a499-bf89fb53b98a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidFirstnameCreatingUserForStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"alphabets only\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "9ffd9985-8911-4f2f-aed8-778e0d7daee2"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "0eebaf04-7014-40be-8032-d0845695d42d"
							}
						}
					],
					"id": "6d1925ea-ff92-4a0f-95ba-cc8fafb572ef",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{InvalidFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidLinkedInCreatingUserForStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"www.linkedin.com\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "7cfe3b10-771c-492b-9dc7-dfa6da509a62"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "821b7a19-7003-44f7-9690-314076411692"
							}
						}
					],
					"id": "cd14ca00-fc49-4c2d-9bc5-0282a36aa519",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{InvaliduserLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidPhoneNumberCreatingUserForStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"format (CountryCode)(PhoneNo)\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "d5015c0c-14f2-4f62-8af5-4d7fb8e1fe75"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm. collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "fae69aab-279c-413b-a166-13a082311c0f"
							}
						}
					],
					"id": "c5be1394-1e0d-46f1-a699-dea68b5e0851",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{InvalidPhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidMailCreatingUserForStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e7dcd5c-03a4-470d-ac13-e9f9987e349f",
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0a9fc0b1-7753-4618-8b39-193820758600",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"staff\" + pm.variables.replaceIn(\"{{$timestamp}}\");",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "a1339e95-a832-4e99-b025-de50d7277b08",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidVisaStatusCreatingUserForStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"invalid\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "2ca8da7c-09ff-467c-a874-1ddde236928d"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "314471d5-3557-4c2c-ae19-b33bc900e196"
							}
						}
					],
					"id": "04844f12-f544-4eff-ad51-c0ff46fc50f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{InvalidVisa}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidRoleIdCreatingUserForStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"invalid\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "0ad5d5e0-21f1-4bff-aa74-692d97ebc8b3"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "75d6b98a-3360-421e-abf0-b1a5e8c51098"
							}
						}
					],
					"id": "71044061-6622-4518-9a6a-7e4783b0a80a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{invalidroleId}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "CreatingUserForStaffRole",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2faab7df-1488-4b87-bf86-e3e7c3731e68",
								"exec": [
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"staff\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "efb8701e-2cb3-4b5f-89bd-b3066d64c811",
								"exec": [
									"var staffuserId = JSON.parse(responseBody); ",
									"pm.collectionVariables.set(\"staffuserId\",staffuserId.userId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bb4d79f0-3d03-4d50-ae95-da5443fd54a7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidExistingPhoneCreatingUserForStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"already exists\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "c34b13d2-2af8-4e7c-9ae8-3f4df93cb221"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript",
								"id": "bdb2e256-6063-4145-8592-d2a4db8d6f7c"
							}
						}
					],
					"id": "f6fcd35a-4a3c-47a3-bf11-7995a2fa28b8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidExistingMailCreatingUserForStaffRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32e1440a-5e70-4018-abe9-71380aeebf4a",
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"already exists\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "874cd50a-a279-446d-876c-dd000b8c38dd",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "71bb5027-cc0a-4ca6-936c-be0ee7bbbcf7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{staffFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Staff\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStaff}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStaff}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "NoAuthCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);"
								],
								"type": "text/javascript",
								"id": "1e25093b-bf10-4456-882f-c5168c4c4793"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									"pm.collectionVariables.set(\"existingmail\",email);"
								],
								"type": "text/javascript",
								"id": "7ad4c728-f96a-4abc-a223-1101850a7f96"
							}
						}
					],
					"id": "7fbf3b25-d0fe-4111-a9db-43bec7767e96",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyRequestBodyCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);"
								],
								"type": "text/javascript",
								"id": "ba4f87b8-6af7-40b1-9f02-c44751dd6489"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "7f3b24e1-48e3-4ccd-8641-059e70b6e1ec"
							}
						}
					],
					"id": "661af8f7-f795-441c-afce-3e5e735f559b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyFirstnameCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec5beda-4933-4746-b047-a1b416e48a15",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57541f07-30d7-451d-80bc-0837405bf646",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									"pm.collectionVariables.set(\"existingmail\",email);",
									"pm.collectionVariables.set(\"existingphone\",PhoneNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0ff06b30-0235-4c1e-ab6f-f73298814595",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyLastnameCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec5beda-4933-4746-b047-a1b416e48a15",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57541f07-30d7-451d-80bc-0837405bf646",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									"pm.collectionVariables.set(\"existingmail\",email);",
									"pm.collectionVariables.set(\"existingphone\",PhoneNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0d34fbd4-4be1-46f1-a220-e09d22b91f3d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyPhoneNumberCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec5beda-4933-4746-b047-a1b416e48a15",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"required\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57541f07-30d7-451d-80bc-0837405bf646",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									"pm.collectionVariables.set(\"existingmail\",email);",
									"pm.collectionVariables.set(\"existingphone\",PhoneNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c208d8f3-e95f-4690-bda6-9b63183532a3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": \"\",\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyEmailCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec5beda-4933-4746-b047-a1b416e48a15",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"required\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57541f07-30d7-451d-80bc-0837405bf646",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									"pm.collectionVariables.set(\"existingmail\",email);",
									"pm.collectionVariables.set(\"existingphone\",PhoneNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "95b66602-a54b-49ab-8cfa-a88b64d011bb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyRoleIdCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec5beda-4933-4746-b047-a1b416e48a15",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"mandatory\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57541f07-30d7-451d-80bc-0837405bf646",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									"pm.collectionVariables.set(\"existingmail\",email);",
									"pm.collectionVariables.set(\"existingphone\",PhoneNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6b0fa029-1ff4-45df-9f69-cfa8af29d417",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyTimeZoneCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec5beda-4933-4746-b047-a1b416e48a15",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57541f07-30d7-451d-80bc-0837405bf646",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									"pm.collectionVariables.set(\"existingmail\",email);",
									"pm.collectionVariables.set(\"existingphone\",PhoneNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "37e5aa38-c699-4d6b-9d0d-4fce144fd168",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyVisaStatusCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec5beda-4933-4746-b047-a1b416e48a15",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"empty\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57541f07-30d7-451d-80bc-0837405bf646",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									"pm.collectionVariables.set(\"existingmail\",email);",
									"pm.collectionVariables.set(\"existingphone\",PhoneNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ada6af29-ac93-47bb-ae85-d279757182ce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidFirstnameCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"alphabets only\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "d5a1eb06-47ea-472b-9063-ee1d64019d13"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "79d73c6d-401d-4a40-987d-e5ad57dbf5a9"
							}
						}
					],
					"id": "358a6d8c-27f5-4a3d-a712-603274bc7944",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{InvalidFirstname}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidLinkedInCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"www.linkedin.com\");",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "d199d2bf-41c0-4b3a-9527-baefe42fb17b"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "b89e45b9-200d-4aa9-a711-8842c5a0537b"
							}
						}
					],
					"id": "96ce6dae-8a08-4066-b469-8f9e7abafb93",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{InvaliduserLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidPhoneNumberCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"format (CountryCode)(PhoneNo)\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "15f39215-a2bb-4deb-b1fc-901702b9e9ba"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "20caaa6d-eb83-488e-82ad-92a473b0eeb7"
							}
						}
					],
					"id": "639521f3-fd1c-4fc8-a0fe-2520c301eded",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{InvalidPhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidMailCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5183cc49-da96-46a4-84d5-79834d53471d",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "eec89cf9-319a-45e5-8b0a-e58d8709ddf2",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"student\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1);",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "51597c73-5888-40a9-a375-dac968cceb15",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidVisaStatusCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"invalid\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "ccd497c8-2b76-422b-9e76-4c4240097c6a"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "20e09304-cf1b-47a5-97f9-0a8e82d40081"
							}
						}
					],
					"id": "42662f0f-05a8-4aeb-b776-fe08e7b2e665",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": \"{{PhoneNumber}}\",\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{InvalidVisa}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidRoleIdCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"invalid\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "fb2d71f7-0ffc-4950-9093-aa596e455b90"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "a5054119-aed5-4158-a65f-ea3783262b6d"
							}
						}
					],
					"id": "f7ffb4a4-882a-4bde-902a-f6ad0744aab8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": \"{{PhoneNumber}}\",\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{invalidroleId}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "CreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec5beda-4933-4746-b047-a1b416e48a15",
								"exec": [
									"var staffuserId = JSON.parse(responseBody); ",
									"pm.collectionVariables.set(\"studentuserId\",staffuserId.userId);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "57541f07-30d7-451d-80bc-0837405bf646",
								"exec": [
									"",
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"student\" + pm.variables.replaceIn(\"{{$timestamp}}\"+1)+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\",email);",
									"",
									"pm.collectionVariables.set(\"existingmail\",email);",
									"pm.collectionVariables.set(\"existingphone\",PhoneNumber);"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8f7cecd7-1396-43a4-8fc1-7ac571ac3171",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidExistingPhoneNumberCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"already exists\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "fa25e020-319d-4262-956c-9162e255a7e6"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "4cb00ff9-c9b4-453a-8fc9-9199481617ab"
							}
						}
					],
					"id": "e39b1067-5f87-44ff-a9cd-e7cd0708269f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "InvalidExistingMailCreatingUserForStudentRole",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c15a65e4-3aa7-484a-9c9c-23d31012dfe4",
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"already exists\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a33159a6-3d8c-4e57-8e96-632daca597be",
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1afc7d21-3501-41be-8d38-958b38943e40",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{StaffComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{firstnameStudent}}\",\n  \"userId\": \"\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{userLinkedinUrl}}\",\n  \"userLocation\": \"{{userLocation}}\",\n  \"userLogin\": {\n    \"loginStatus\": \"{{loginStatus}}\",\n    \"password\": \"{{password}}\",\n    \"roleIds\": [\n      \"Student\"\n    ],\n    \"status\": \"{{status}}\",\n    \"userLoginEmail\": \"{{email}}\"\n  },\n  \"userMiddleName\": \"{{userMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userRoleMaps\": [\n    {\n      \"roleId\": \"{{roleIdStudent}}\",\n         \"userRoleStatus\": \"{{userStatus}}\"\n    }\n  ],\n  \"userTimeZone\": \"{{timeZone}}\",\n  \"userVisaStatus\": \"{{visaStatusStudent}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus"
					},
					"response": []
				},
				{
					"name": "All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "041703b1-a7d2-4b2e-b4e0-dd30effcadef"
							}
						}
					],
					"id": "bfecf9e6-a2ca-403f-8933-6c7d328c4a4b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users"
					},
					"response": []
				},
				{
					"name": "All Users with No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "548baa22-5bbc-4fe0-beab-0fadf46dd5a3"
							}
						}
					],
					"id": "228ccb57-c2c2-4b39-b5f6-1a08c7dee3bf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users"
					},
					"response": []
				},
				{
					"name": "All Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "da194890-41d3-42df-9337-de24d183491e"
							}
						}
					],
					"id": "4f89a59b-7c4d-4103-b3da-258d415edb4f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/roles"
					},
					"response": []
				},
				{
					"name": "All Roles With No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "abde087c-3a74-407c-88d9-ab5eafab792c"
							}
						}
					],
					"id": "e6c50917-9f07-4ee8-98ff-8fe34289127c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/roles"
					},
					"response": []
				},
				{
					"name": "User Information By User Id with No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "afaa2567-58d5-4350-b34c-70ead92a79df"
							}
						}
					],
					"id": "5378eca6-7e6a-416a-80f6-1767332299c6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "User Information By Invalid User Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "4d272d91-89e0-4301-a5b4-b4c589941baf"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "93b355d4-1552-4593-aca4-6a0fc486b6de"
							}
						}
					],
					"id": "a8e02380-b9de-4b0b-ac77-7f4138b032e4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/{{InvaliduserId}}"
					},
					"response": []
				},
				{
					"name": "User Information By User Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "8788f4ec-9b46-4eb6-9697-dea6f4899dc0"
							}
						}
					],
					"id": "5ba0d07b-2a54-4ad5-809b-0b4627c158a1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "All Users With Roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "9c998a30-49ae-4c1d-a0e8-2c1ab9603170"
							}
						}
					],
					"id": "b0bfbd8a-a973-4139-9758-3b4b7401a5c5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/roles"
					},
					"response": []
				},
				{
					"name": "All Users With Roles With No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a3bb1f8b-d69d-482d-b4cf-9b50f544e1f6"
							}
						}
					],
					"id": "f451a18e-d4af-432f-afa2-782b8cdef2d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/roles"
					},
					"response": []
				},
				{
					"name": "By Status Count Of Active and Inactive Users with No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "9a42be93-700a-4e44-84c4-0360a6ef486a"
							}
						}
					],
					"id": "3601ce0b-e3af-456a-9335-d038b7215e79",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/byStatus?id={{byStatusId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"byStatus"
							],
							"query": [
								{
									"key": "id",
									"value": "{{byStatusId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By Status Count Of Active and Inactive Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "331cf459-79b6-48fb-b043-d4839802539b"
							}
						}
					],
					"id": "e5b234ab-ed67-4f0b-b5d4-142b04743e7a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/byStatus"
					},
					"response": []
				},
				{
					"name": "By Status Count Of Active and Inactive Users For Admin Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a1e4db4b-a71b-4465-8832-c0e9c1bf7647"
							}
						}
					],
					"id": "6ac78649-87ef-43e7-b083-7540cc753d87",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/byStatus?id=R01",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"byStatus"
							],
							"query": [
								{
									"key": "id",
									"value": "R01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By Status Count Of Active and Inactive Users with Invalid Role Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "51155e1d-8343-450f-b48e-59c561e105a8"
							}
						}
					],
					"id": "081d5ac4-ac13-4d97-a925-d925137a6803",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/byStatus?id=15",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"byStatus"
							],
							"query": [
								{
									"key": "id",
									"value": "15"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By Status Count Of Active and Inactive Users For Student Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "47b7724c-6941-43d1-9cdc-5b264e3d83f8"
							}
						}
					],
					"id": "a48c12bb-7f94-42cd-8661-1ba882188ff3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/byStatus?id=R03",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"byStatus"
							],
							"query": [
								{
									"key": "id",
									"value": "R03"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By Status Count Of Active and Inactive Users For Staff Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "31119058-a95e-4f02-b0ed-76c85847bbaf"
							}
						}
					],
					"id": "b5d9a82e-18b5-4d26-8c94-a72d2b996db0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/byStatus?id=R03",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"byStatus"
							],
							"query": [
								{
									"key": "id",
									"value": "R03"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "User By Program Batches With Invalid Program Batch",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "aee387fc-e382-4aa4-be13-fdd54a5f1c03"
							}
						}
					],
					"id": "07b57926-a84d-402f-88c7-138312d358d2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/programBatch/844"
					},
					"response": []
				},
				{
					"name": "User By Program Batches With No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "376fcfce-cd66-4176-b387-cfede4322eb3"
							}
						}
					],
					"id": "3f726994-a434-4531-8656-ca9d2b90887a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/programBatch/8444"
					},
					"response": []
				},
				{
					"name": "User for Program With Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "fed314a6-01c4-4d83-84f9-8cd1ee5ca88d"
							}
						}
					],
					"id": "a98dc800-2deb-444e-83d2-b3b3372a812a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/programs/1621"
					},
					"response": []
				},
				{
					"name": "User for Program with No Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "7680813c-50e5-453e-9335-78fa748ff8b7"
							}
						}
					],
					"id": "838f42a9-515a-4752-bb16-2a1f11571326",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/programs/16213"
					},
					"response": []
				},
				{
					"name": "NoAuthGetUsersbyRoleId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"id": "c9ab958d-3df9-4366-b53b-670a32cf0d45"
							}
						}
					],
					"id": "9abaf51d-f4b2-450d-9bbb-3396a6f60a42",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/roles/{{roleIdAdmin}}"
					},
					"response": []
				},
				{
					"name": "NoAuthGetActiveUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);"
								],
								"type": "text/javascript",
								"id": "93e1b25c-c9da-4f39-a5c9-f797b72cb07d"
							}
						}
					],
					"id": "196cfc32-0116-4149-8afa-5faaf04e6ef1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/activeUsers"
					},
					"response": []
				},
				{
					"name": "GetActiveUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "3f0703ef-59a5-441c-9608-fd25cc163f0b"
							}
						}
					],
					"id": "72b125cb-2417-424c-9e34-043f5644d00c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/activeUsers"
					},
					"response": []
				},
				{
					"name": "GetUsersbyRoleId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "a8330227-2ff2-455e-896a-01e750318b05"
							}
						}
					],
					"id": "0b616e31-94ff-41c3-8bc6-b4e191f963bb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/roles/{{roleIdAdmin}}"
					},
					"response": []
				},
				{
					"name": "InvalidGetUsersbyRoleIdNotPresent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 User Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"id": "91b044f1-cb5b-49b8-ba22-dd10a6df1f19"
							}
						}
					],
					"id": "a4a05aab-5885-418f-b8d6-6f5abeeb0f08",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/roles/{{invalidroleId}}"
					},
					"response": []
				},
				{
					"name": "NoAuthGetUsersbyRoleIdV2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"id": "971a13b5-48a9-4771-8af0-6a47d5b5bd93"
							}
						}
					],
					"id": "4631b66a-977b-4ab6-a4f5-f3985e663800",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/v2/users/"
					},
					"response": []
				},
				{
					"name": "GetUsersbyRoleIdV2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "e3f6d5a2-1519-4f21-b89b-ccfae80a5324"
							}
						}
					],
					"id": "1c50d24d-6ed7-45ce-9ed1-cbf777e2b9a5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/v2/users/"
					},
					"response": []
				},
				{
					"name": "NoAuthUpdateUserAuth",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									"var visaStatus=\"H4-EAD\";",
									"pm.collectionVariables.set(\"visaStatus\", visaStatus);"
								],
								"type": "text/javascript",
								"id": "483f9ccd-e680-4a34-9ba5-5461bf9b827c"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"id": "a25f4742-60e6-4087-b941-edf96788d0bd"
							}
						}
					],
					"id": "8934c280-c6ce-41b4-93b1-e81908e8bfd2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{updateFirstname}}\",\n  \"userId\": \"{{adminuserId}}\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{Updatelinkenin}}\",\n  \"userLocation\": \"{{UpdateLocation}}\",\n  \"userLoginEmail\": \"{{email}}\",\n  \"userMiddleName\": \"{{UpdateuserMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userTimeZone\": \"{{updateTimeZone}}\",\n  \"userVisaStatus\":\"{{visaStatus}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyFistnameUpdateUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									"var visaStatus=\"H4-EAD\";",
									"pm.collectionVariables.set(\"visaStatus\", visaStatus);"
								],
								"type": "text/javascript",
								"id": "31543146-fb62-4fd7-9250-a8895ea00788"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"mandatory\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "903a24cd-756a-4e24-bd91-517d140f08d3"
							}
						}
					],
					"id": "f4446097-7a3b-4afb-b561-ed07bcd1cec0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"\",\n  \"userId\": \"{{adminuserId}}\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{Updatelinkenin}}\",\n  \"userLocation\": \"{{UpdateLocation}}\",\n  \"userLoginEmail\": \"{{email}}\",\n  \"userMiddleName\": \"{{UpdateuserMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userTimeZone\": \"{{updateTimeZone}}\",\n  \"userVisaStatus\":\"{{visaStatus}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyLastnameFieldUpdateUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									"var visaStatus=\"H4-EAD\";",
									"pm.collectionVariables.set(\"visaStatus\", visaStatus);"
								],
								"type": "text/javascript",
								"id": "c86c81ff-b6f9-422e-ae7e-53a107ee8e04"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"mandatory\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "f964c988-467b-4d8c-a923-e1ee0c47f1e3"
							}
						}
					],
					"id": "fb5b5770-51f9-41b6-91f3-c26f0513013d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{updateFirstname}}\",\n  \"userId\": \"{{adminuserId}}\",\n  \"userLastName\": \"\",\n  \"userLinkedinUrl\": \"{{Updatelinkenin}}\",\n  \"userLocation\": \"{{UpdateLocation}}\",\n  \"userLoginEmail\": \"{{email}}\",\n  \"userMiddleName\": \"{{UpdateuserMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userTimeZone\": \"{{updateTimeZone}}\",\n  \"userVisaStatus\":\"{{visaStatus}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyPhoneNumberUpdateUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									"var visaStatus=\"H4-EAD\";",
									"pm.collectionVariables.set(\"visaStatus\", visaStatus);"
								],
								"type": "text/javascript",
								"id": "7cad28b7-2dcf-4ef9-a56c-8586f7692d65"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"required\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "371ee133-3903-4945-b887-a3b866f21c71"
							}
						}
					],
					"id": "09e7f069-f710-4a91-9072-d0ddc4284f14",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{updateFirstname}}\",\n  \"userId\": \"{{adminuserId}}\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{Updatelinkenin}}\",\n  \"userLocation\": \"{{UpdateLocation}}\",\n  \"userLoginEmail\": \"{{email}}\",\n  \"userMiddleName\": \"{{UpdateuserMiddleName}}\",\n  \"userPhoneNumber\": \"\",\n  \"userTimeZone\": \"{{updateTimeZone}}\",\n  \"userVisaStatus\":\"{{visaStatus}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidVisaStatusUpdateUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									"var visaStatus=\"H4-EAD\";",
									"pm.collectionVariables.set(\"visaStatus\", visaStatus);"
								],
								"type": "text/javascript",
								"id": "feefbfa9-f6bf-4452-89fa-84c341ce039a"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"invalid\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "4d1110d6-0415-4d4a-9944-da9086f4e277"
							}
						}
					],
					"id": "6cb9fd7b-45a7-47bc-8433-e80e038aaef7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{updateFirstname}}\",\n  \"userId\": \"{{adminuserId}}\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{Updatelinkenin}}\",\n  \"userLocation\": \"{{UpdateLocation}}\",\n  \"userLoginEmail\": \"{{email}}\",\n  \"userMiddleName\": \"{{UpdateuserMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userTimeZone\": \"{{updateTimeZone}}\",\n  \"userVisaStatus\":\"{{InvalidVisa}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidTimeZoneUpdateUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									"var visaStatus=\"H4-EAD\";",
									"pm.collectionVariables.set(\"visaStatus\", visaStatus);"
								],
								"type": "text/javascript",
								"id": "f55e1e06-7d6e-4510-9e23-58bda0ba1481"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"invalid\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "d0653bb5-1597-452e-b7d6-44622a831460"
							}
						}
					],
					"id": "5bf50ed1-c0e7-4359-83a7-dfecb3dbd5b4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{updateFirstname}}\",\n  \"userId\": \"{{adminuserId}}\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{Updatelinkenin}}\",\n  \"userLocation\": \"{{UpdateLocation}}\",\n  \"userLoginEmail\": \"{{email}}\",\n  \"userMiddleName\": \"{{UpdateuserMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userTimeZone\": \"{{InvalidTimeZone}}\",\n  \"userVisaStatus\":\"{{visaStatus}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "UpdateUser",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"var PhoneNumber= _.random(2010101010,2313131313);",
									"pm.collectionVariables.set(\"PhoneNumber\", PhoneNumber );",
									"",
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.collectionVariables.set(\"email\", email);",
									"",
									"var visaStatus=\"H4-EAD\";",
									"pm.collectionVariables.set(\"visaStatus\", visaStatus);"
								],
								"type": "text/javascript",
								"id": "19a05df2-2a3c-4568-b10f-8256414d20ee"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "b5c045e5-5d8d-4a58-8e56-94791aff6670"
							}
						}
					],
					"id": "63752133-ddf8-4094-9908-efc7356ae45e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userComments\": \"{{AdminComments}}\",\n  \"userEduPg\": \"{{userEduPg}}\",\n  \"userEduUg\": \"{{userEduUg}}\",\n  \"userFirstName\": \"{{updateFirstname}}\",\n  \"userId\": \"{{adminuserId}}\",\n  \"userLastName\": \"{{userLastName}}\",\n  \"userLinkedinUrl\": \"{{Updatelinkenin}}\",\n  \"userLocation\": \"{{UpdateLocation}}\",\n  \"userLoginEmail\": \"{{email}}\",\n  \"userMiddleName\": \"{{UpdateuserMiddleName}}\",\n  \"userPhoneNumber\": {{PhoneNumber}},\n  \"userTimeZone\": \"{{updateTimeZone}}\",\n  \"userVisaStatus\":\"{{visaStatus}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "NoAuthUpdateUserRoleStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"id": "1ff056f9-8dd1-4e9e-ac0b-cd16825c25f9"
							}
						}
					],
					"id": "8e34444b-8040-4fd9-b9c4-68fb77f06e0b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": \"{{roleIdAdmin}}\",\n  \"userRoleStatus\": \"{{userStatus}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidUserIdUpdateUserRoleStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404-NOT FOUND\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "1f0b9b20-dfc7-467e-8f52-902a4433a0ac"
							}
						}
					],
					"id": "a90035ff-a4f9-48aa-8dba-d1e5420266db",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": \"{{roleIdAdmin}}\",\n  \"userRoleStatus\": \"{{userStatus}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus/{{InvaliduserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyRoleStatusUpdateUserRoleStatus",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "6d497c5c-33f6-42c0-96f3-362279b0da15"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Mandatory\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "477678f2-0ec1-4a62-b0b4-76d0c16d9738"
							}
						}
					],
					"id": "c0e55a12-e2f5-4394-8fd3-469f692938ab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": \"{{roleIdAdmin}}\",\n  \"userRoleStatus\":\"\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidRoleStatusUpdateUserRoleStatus Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "e7fcc592-0f6f-4f77-beff-91ac843a4863"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "0f2087df-bc63-4d98-b5fc-d16b45704da3"
							}
						}
					],
					"id": "f50166c3-add7-4ceb-9ed0-ebc850608cad",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": \"{{roleIdAdmin}}\",\n  \"userRoleStatus\":\"{{InvalidTimeZone}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "UpdateUserRoleStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "1ddad47b-7d77-46c0-866a-e1c0c7693fdf"
							}
						}
					],
					"id": "ba1005ff-ee5e-4c8d-bd55-68bffc4687f1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"roleId\": \"{{roleIdAdmin}}\",\n  \"userRoleStatus\": \"{{userStatus}}\"\n}\n\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleStatus/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "NoAuthUpdateUserRoleID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"id": "9b045cb0-c242-456e-b564-ebda5235881a"
							}
						}
					],
					"id": "55a795e6-0dc3-4b37-9db0-7690822d2d86",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userRoleList\": [\n    \"{{roleIdStudent}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleId/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidExistingRoleIdUpdateUserRoleID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"already exists\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "275c1d73-6228-44a7-9402-19279e2c1709"
							}
						}
					],
					"id": "3a8d8628-28e7-4c2b-ab69-8b5d0ed53519",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userRoleList\": [\n    \"{{roleIdAdmin}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleId/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidUserIdUpdateUserRoleID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 NOT FOUND\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"id": "1c000272-e913-48d0-840e-19eb3bcfe174"
							}
						}
					],
					"id": "67dd0355-c1db-4f44-a2cc-55db33c14e42",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userRoleList\": [\n    \"{{roleIdStudent}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleId/{{InvaliduserId}}"
					},
					"response": []
				},
				{
					"name": "UpdateUserRoleID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "dabe87ae-d6f8-48a4-bdb1-a6b69766c18f"
							}
						}
					],
					"id": "e2962f0f-7a3c-459b-9229-555e871491a8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userRoleList\": [\n    \"{{roleIdStudent}}\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleId/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "NoAuthorisationAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"id": "1d396202-f2a1-4869-b593-ea3929a94195"
							}
						}
					],
					"id": "f4c5279d-5474-465e-b7a1-6e85488ae338",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdStudent}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidUserIdAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404-NOT FOUND\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "5d75d744-d6fa-4da5-a37b-fc30de27da0d"
							}
						}
					],
					"id": "a97c785c-941a-4e73-870f-eaa833212f2a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdStaff}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{InvaliduserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidAdminRoleIdAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"User with Role Admin cannot be assigned\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "a79c9320-9327-4924-bc44-2a26aca33bcc"
							}
						}
					],
					"id": "d538aeab-ea7b-4fc9-9b58-3f168775ae46",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdAdmin}}\",\n  \"userId\": \"{{adminuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidRoleIdAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404-NOT FOUND\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"User not found\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "dee26451-623b-402c-a963-ecbbc3b87433"
							}
						}
					],
					"id": "c9d1d1d0-746d-4745-8fe2-1385564315fa",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdStaff}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyProgramIdAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "52e9e8ca-fd8d-42ee-bbf0-fde771e958ca",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"mandatory\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "84b5123e-37d8-4973-8a2c-2d40393dd7ff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\": \"\",\n  \"roleId\": \"{{roleIdStudent}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\": 8448,\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyRoleIdAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7e21374d-5346-4d6c-85c3-a77f48dfc250",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"mandatory\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "adc81155-509c-4456-851f-7a5772daaaec",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyBatchIdAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b5ddaf4-404e-435d-b9a1-91332651a794",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"mandatory\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "617fee0e-40c4-43e6-8aca-05d2a61af153",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdStudent}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidEmptyBAtchStatusAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6553b719-d4b8-4e9f-8ef4-f0249f32e865",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Mandatory\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8621fb49-7488-40cb-8099-a9430a845a53",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdStudent}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidProgramIdAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f5708fc-a034-4af9-9ea7-3e7bfc93875a",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "af9e7b05-0ab9-4bd2-8a13-0db8eaf22f41",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{InvalidprogramId}}\",\n  \"roleId\": \"{{roleIdStudent}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidRoleIdAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e2c34229-8c93-452b-8c9f-1d8d3dcd30f3",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b2d9f2af-61e1-44ca-8975-e4297ae7bd77",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{invalidroleId}}\",\n  \"userId\": \"{{roleIdStudent}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidBatchIdAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec0f5e93-dd50-4bf6-8296-def08114f8f1",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"invalid\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7c9e6a6e-745d-4f3c-9569-5d2840e911fb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdStudent}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{InvalidBatchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidBatchStatusAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d69bbb3a-930c-4f7a-bfa4-e46a1c1e7272",
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Inactive\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "d90d6206-536d-4e35-85d4-86bf5f460c1a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdStudent}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{InvalidBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{userIdforInvalid}}"
					},
					"response": []
				},
				{
					"name": "InvalidInactivebatchAssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2033709b-1b34-42de-b4b8-b797a3382e19",
								"exec": [
									"pm.test(\"Status code is 400 BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "df7ffdba-deed-4863-805d-68121aabbbd1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdStudent}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{InactiveBatchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "AssignUpdateUserRoleProgramBatchStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2033709b-1b34-42de-b4b8-b797a3382e19",
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "213409b3-7684-4a73-bcb0-a50077ba6ac7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"programId\":\"{{programId}}\",\n  \"roleId\": \"{{roleIdStudent}}\",\n  \"userId\": \"{{staffuserId}}\",\n  \"userRoleProgramBatches\": [\n    {\n      \"batchId\":\"{{batchId}}\",\n      \"userRoleProgramBatchStatus\": \"{{userRoleProgramBatchStatus}}\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/roleProgramBatchStatus/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "User for Program",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "8be912f4-8c47-4f53-9c5b-817bd48e82fc"
							}
						}
					],
					"id": "ba22e368-9010-4250-9642-215186627837",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/programs/{{programId}}"
					},
					"response": []
				},
				{
					"name": "User By Program Batches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "55951514-464b-4880-8250-b2543f841919"
							}
						}
					],
					"id": "e9b9da04-dff3-4ac0-bbd5-8a74aca1a95d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/programBatch/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "GetUserRoleUserId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10e8070e-a737-40d6-a5a8-7bd34d1c1533",
								"exec": [
									"\r",
									"i=pm.response.code;\r",
									"if(i==200){\r",
									"    pm.test(\"Status code is 200 :Retrive Successfully\", function () {\r",
									"     pm.expect(pm.response.code).to.eql(200);\r",
									"    });}\r",
									"if(i==400){\r",
									"    pm.test(\"Status code is 400 :Bad request \", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"    });}\r",
									"if(i==401){\r",
									"pm.test(\"Status code is 401 : Bad credentials\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(401);\r",
									"});}\r",
									"if(i==404){\r",
									"pm.test(\"Status code is 404: Not Found\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cdd56f97-d1c7-4676-82f3-160752cb3c7b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/userRoleProgramBatchMap/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "NoAuthUpdateUserLoginStatus",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.environment.set(\"email\",email);"
								],
								"type": "text/javascript",
								"id": "e85b9273-566d-4a07-ba9f-9d8914329dc6"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"id": "285b5ca4-fb69-4848-add4-723e8559d71b"
							}
						}
					],
					"id": "738e0bb1-7f59-4895-bca0-9dc16b5d0034",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"loginStatus\": \"{{status}}\",\n  \"password\": \"\",\n  \"roleIds\": [\n     \"{{roleIdAdmin}}\"\n  ],\n  \"status\": \"{{status}}\",\n  \"userLoginEmail\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/userLogin/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvaliduserIdUpdateUserLoginStatus",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.environment.set(\"email\",email);"
								],
								"type": "text/javascript",
								"id": "b3fe8415-8f2e-4834-b855-c529a5d83676"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404-NOT FOUND\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"id": "cdda636a-a49a-451e-a2d5-ca49911d1195"
							}
						}
					],
					"id": "90f1eaf5-8bb6-416c-95e9-c27eddca44b3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"loginStatus\": \"{{status}}\",\n  \"password\": \"\",\n  \"roleIds\": [\n     \"{{roleIdAdmin}}\"\n  ],\n  \"status\": \"{{status}}\",\n  \"userLoginEmail\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/userLogin/{{InvaliduserId}}"
					},
					"response": []
				},
				{
					"name": "UpdateUserLoginStatus",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.environment.set(\"email\",email);"
								],
								"type": "text/javascript",
								"id": "42764310-f45d-41db-8780-c19647ba2bcc"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"id": "cfbb8aa1-8155-42ee-8b9d-2eaf7e294540"
							}
						}
					],
					"id": "2c4f238b-7d6e-4ea3-af3c-2ee6c7db6f54",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"loginStatus\": \"{{status}}\",\n  \"password\": \"\",\n  \"roleIds\": [\n     \"{{roleIdAdmin}}\"\n  ],\n  \"status\": \"{{status}}\",\n  \"userLoginEmail\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/userLogin/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidStatusUpdateUserLoginStatus",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var email = \"admin\" + pm.variables.replaceIn(\"{{$timestamp}}\")+\"@gmail.com\";",
									"pm.environment.set(\"email\",email);"
								],
								"type": "text/javascript",
								"id": "e91fe591-377e-4799-9149-4dca3708a4ec"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400-BAD REQUEST\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid\");",
									"});",
									""
								],
								"type": "text/javascript",
								"id": "751bbac7-6c1c-4366-a8ca-e4a7d72db74f"
							}
						}
					],
					"id": "f987ede8-f8c3-4d68-813d-5a217bdca7e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"loginStatus\": \"{{status}}\",\n  \"password\": \"\",\n  \"roleIds\": [\n     \"{{roleIdAdmin}}\"\n  ],\n  \"status\": \"\",\n  \"userLoginEmail\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/users/userLogin/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "GetUserRolePBAllUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8bcdd62f-b084-4a30-ae4d-009f3b4fbfc6",
								"exec": [
									"   \r",
									"i=pm.response.code;\r",
									"if(i==200){\r",
									"    pm.test(\"Status code is 200 :Retrive Successfully\", function () {\r",
									"     pm.expect(pm.response.code).to.eql(200);\r",
									"    });}\r",
									"if(i==400){\r",
									"    pm.test(\"Status code is 400 :Bad request \", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"    });}\r",
									"if(i==401){\r",
									"pm.test(\"Status code is 401 : Bad credentials\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(401);\r",
									"});}\r",
									"if(i==404){\r",
									"pm.test(\"Status code is 404:UserId Not Found\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});}\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "84d9119e-028c-49ec-9ad1-7fa2ad6a7ec9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/userRoleProgramBatchMap"
					},
					"response": []
				},
				{
					"name": "NoAuthDeleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"UnAuthorized 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript",
								"id": "5b2cd59d-570b-426e-b59f-83acd073a314"
							}
						}
					],
					"id": "fc4dfd45-34ed-4492-9726-dde52c0a3614",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/users/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "InvalidUserIdDeleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404-NOT FOUND\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"console.log(responseJson);",
									"",
									""
								],
								"type": "text/javascript",
								"id": "7efa73db-3968-42b9-a3f4-a251fef8ec18"
							}
						}
					],
					"id": "d2218430-6987-452e-936f-68b40408f19b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/users/{{InvaliduserId}}"
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"id": "2bc71e83-0609-430d-b712-1b005b72e902"
							}
						}
					],
					"id": "b521c4dd-866b-4a26-b540-ab3d5bd9dc12",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{baseUrl}}/users/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "View User information after deleting the user Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "8788f4ec-9b46-4eb6-9697-dea6f4899dc0"
							}
						}
					],
					"id": "2bd92721-f781-4f92-8940-2b67bedc9a64",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "DeleteUserRoleAllPBBasedonUserId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "607ad3b9-0312-48c5-9689-c9a9b846e689",
								"exec": [
									"\r",
									"i=pm.response.code;\r",
									"if(i==200){\r",
									"    pm.test(\"Status code is 200 :Deleted Successfully\", function () {\r",
									"     pm.expect(pm.response.code).to.eql(200);\r",
									"    });}\r",
									"if(i==400){\r",
									"    pm.test(\"Status code is 400 :Bad request \", function () {\r",
									"    pm.expect(pm.response.code).to.eql(400);\r",
									"    });}\r",
									"if(i==401){\r",
									"pm.test(\"Status code is 401 : Bad credentials\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(401);\r",
									"});}\r",
									"if(i==404){\r",
									"pm.test(\"Status code is 404: Not Found\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(404);\r",
									"});}"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ed047598-b8c3-4cb4-90fe-90b49db2f91e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/userRoleProgramBatchMap/deleteAll/{{userIdd}}"
					},
					"response": []
				},
				{
					"name": "New Request",
					"id": "347809a5-63dd-4f78-bab8-0aab03518f45",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "User Information By User Id after all assigned program and batch is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "8788f4ec-9b46-4eb6-9697-dea6f4899dc0"
							}
						}
					],
					"id": "807e9269-5588-4779-9452-9e611ce0aa41",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/users/{{adminuserId}}"
					},
					"response": []
				},
				{
					"name": "View Batch by valid BatchID after all after all assigned program and batch is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84039679-2f72-47cd-8af9-3c4ab005f7e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "de4d2e1d-cce4-4cc4-9965-35b70e9575b6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/batches/batchId/{{batchId}}"
					},
					"response": []
				},
				{
					"name": "View Program By ProgramID after all assigned program and batch is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b878373-4aef-4041-9718-aab60103f251",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9498d6d0-0e5a-4f6e-8aca-daa3325652f4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/{{getProgramByProgramId}}/{{programId}}"
					},
					"response": []
				}
			],
			"id": "5b6900fa-43bb-4672-b6fb-ff2f0d5090e9"
		},
		{
			"name": "UserSignOut",
			"item": [
				{
					"name": "User SignOut from LMS application",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3feb9a3a-c9e7-4705-9016-defe23f8858e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "10dda893-80cc-4f15-8ff7-0d26d1ff54c7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{BearerToken}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/logoutlms"
					},
					"response": []
				},
				{
					"name": "No Auth UserLogout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2c53165f-ee2c-4ef6-80f7-fd631cc5e7a3",
								"exec": [
									"pm.test(\"Status code is 401 : Unauthorized\", function () {\r",
									"    pm.expect(pm.response.code).to.eql(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "fe191a68-095d-4f93-97da-0d139521b2f4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/logoutlms"
					},
					"response": []
				}
			],
			"id": "c369c220-a523-4065-a9a9-96090966ef86"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "02fde911-58a9-4f9d-b830-ef5e5adccdc8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "43095d75-361e-4cfe-93f0-6d8b3beae302",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BearerToken",
			"value": ""
		},
		{
			"key": "programName",
			"value": ""
		},
		{
			"key": "programDescription",
			"value": ""
		},
		{
			"key": "programStatus",
			"value": ""
		},
		{
			"key": "programId",
			"value": ""
		},
		{
			"key": "creationTime",
			"value": ""
		},
		{
			"key": "lastModTime",
			"value": ""
		},
		{
			"key": "InActiveProgramId",
			"value": ""
		},
		{
			"key": "batchName",
			"value": ""
		},
		{
			"key": "batchDescription",
			"value": ""
		},
		{
			"key": "batchNoOfClasses",
			"value": ""
		},
		{
			"key": "batchStatus",
			"value": ""
		},
		{
			"key": "batchId",
			"value": ""
		},
		{
			"key": "InactiveBatchId",
			"value": ""
		},
		{
			"key": "InActiveBatchName",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://lms-marchapi-hackathon-a258d2bbd43b.herokuapp.com/lms"
		},
		{
			"key": "nonExistngBatchId",
			"value": "123456676",
			"type": "string"
		},
		{
			"key": "PhoneNumber",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "Invalidemail",
			"value": ""
		},
		{
			"key": "adminuserId",
			"value": ""
		},
		{
			"key": "existingphone",
			"value": ""
		},
		{
			"key": "userIdforInvalid",
			"value": ""
		},
		{
			"key": "staffuserId",
			"value": ""
		},
		{
			"key": "existingmail",
			"value": ""
		},
		{
			"key": "studentuserId",
			"value": ""
		},
		{
			"key": "visaStatus",
			"value": ""
		},
		{
			"key": "NonExistProgramName",
			"value": "NonExistProgramName 404StatusCode"
		}
	]
}